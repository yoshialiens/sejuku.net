# coding: utf-8
class User < ActiveRecord::Base
	STEP_MAILS = {
		"0" =>
["侍エンジニア塾公式メールマガジン開始",
"name

この度は侍エンジニア塾.netにログイン頂きありがとうございます。
代表の木内翔大です。

侍エンジニア塾のコンテンツに少なからず興味を持って頂けて嬉しく思います。
このメールマガジンではWebエンジニアになる為に必要な情報をお送りいたして行きます。

どんなに有益な情報を知ったとしても、およそ2割ほどの人しか行動しませんし、ものにする方は数%です。

私はnameとこう言った形で繋がりを持てたことを非常にありがたく思います。

ですので、少しでもnameに進化していただきたいと思います。
そのため、このメールで応援させて頂きます。

是非nameには数%の成功を収めて頂き、自由を手にしていただきたいと思います。
それでは、またお会いしましょう。"],
		"1" =>
["プログラミングによって得たもの  侍エンジニア塾公式メールマガジン vol.2",
"name

こんばんは。
侍エンジニア塾代表の木内です。

前回に引き続きWebエンジニアになる為に必要な情報をお送りいたして行きます。

前回お話ししましたが、どんなに有益な情報を知ったとしても、およそ2割ほどの人しか行動しませんし、ものにする方は数%です。

それではその数%が得る特権について今日はお話ししたいと思います。

プログラミングをマスターし、さらにフリーランスのエンジニアとして独立した場合、『5つの自由』が手に入ります。

侍エンジニア塾.netで、既に『5つの自由』については触れているので今回はその一部を掘り下げて、お話ししたいと思います。

『5つの自由』というのは
表現
お金
時間
地理
選択
の自由です。
今回は表現の自由について触れて行きます。

プログラミングという、『アイデアを形にのこし、それが人の役に立つ』という素晴らしい表現手段が身につきます。

音楽や芸術など、なんらかの創作活動をなさってる方はわかると思いますが、これが自分のかけ外のないライフワークになります。

私も、アイデアがおりてくると、三日三晩コーディングをし、サービスを創る事があります。
完成した時はなんとも言えない充実感です。

また、この表現力があるお陰で、様々なかたに声をかけていただき、ともに仕事やプロジェクトを進めることができます。
アイデアマン、マーケター、デザイナーなどの、専門分野をもった方々と肩を並べ、一つの作品を創り上げるという経験は非常に刺激的です。

自分が考えたサービスやビジネスを素早く形にできるというのも非常に強みです。
プログラミングが出来なければ、出来る方を必死で探す必要があったり、高額な費用を払う必要があります。

ですが、自分がプログラミングさえできれば、思いついたアイデアを3日で形にできてしまうのです。

是非nameにも表現手段としてのプログラミングをマスターしていただきたいと思います。
次回はお金と時間の自由についてお話ししたいと思います。

それでは、またお会いしましょう。"],
		"2" =>
["プログラミングによって得たもの『時間とお金編』  侍エンジニア塾公式メールマガジン vol.3",
"name

こんばんは。
侍エンジニア塾代表の木内です。

前回に引き続きWebエンジニアになった時に得られるものについてお話しいたします。

振り返りですが『5つの自由』というのは
表現
お金
時間
地理
選択
の自由です。

今日お話しするのは時間とお金の自由についてです。
フリーランスとして私自身が働いていた時のことを参考にしてお話しします。

まず、エンジニアの市場価値についてお話しします。
nameはエンジニア一人当たりの月の売り上げが平均100万円というのはご存知でしたでしょうか？

一人のプログラマーが一ヶ月作業した時の費用を『一人月』と表現しますが、この一人月の平均は100万円なんです。

『本当に？』と疑う方もいらっしゃるかもしれませんが、これは事実で、僕自身、フリーランスでやっていた時は同じくらい稼いでいました。

もちろん、一人月は『価格』にあたるものなので、エンジニアに実際支払う『原価』はもっと低いです。

しかし、企業から独立して、フリーランスプログラマーとしてやっている場合は全てが自分の給料ですので、このくらい稼げます。

そしてそれだけ稼ぐことができれば、当たり前ですが、少ない時間で多くを稼げます。

ですので、フルタイムで働いていなければ、例えば『月100時間は働いてあとは自由。旅行も貯金も無理なくできる。』なんてことが可能なんです。

しかも、在宅の仕事も数多くあるので、好きな時間に好きな場所で働けます。

実際に僕は朝起きるのが苦手だったので、お昼まえから仕事を開始し、夕方かから会食に出かける生活が長い間続いていました笑

100万円を200時間で稼げるということは単純計算で5000円ということですので、普通のバイトや新卒の時給からしたら、5倍以上の時間があるわけです。

nameはもし、5000円の時給になったとしたら時間とお金をどう使いますか？

是非nameにもプログラマーとして稼いでいたたき、自由なお金と時間を得て欲しいと思います。

次回は地理と選択の自由についてお話ししたいと思います。

それでは、またお会いしましょう。"],
		"3" =>
["プログラミングによって得たもの『地理と選択の自由編』  侍エンジニア塾公式メールマガジン vol.4",
"name

こんばんは。
侍エンジニア塾代表の木内です。

前回に引き続きWebエンジニアになった時に得られるものについてお話しいたします。

振り返りですが『5つの自由』というのは
表現
お金
時間
地理
選択
の自由です。

今日お話しするのは地理と選択の自由についてです。
フリーランスとして私自身が働いていた時のことを参考にしてお話しします。

前回の『お金と時間の自由編』でお話ししましたが、プログラマーの仕事には在宅のものが数多くあります。
在宅の仕事だけやっていけば、世界のどこにいても仕事することは出来ます。

というのも、私自身が大変旅行がすきなので、フリーランスエンジニアとして働いている間、月一度は旅行にいっていました。
アメリカのシリコンバレーにも3週間ほど滞在していましたが、もちろん仕事を向こうでしていました。

最近ではほとんどの海外旅行地でWi-Fi環境が整ってきているので、案件さえ選べば、世界一周しながらでも仕事が出来ます。

実際に私が教えた生徒さんでも、セブ島で語学留学をしながら東京の仕事をしていたり、地方の実家に戻って家族と暮らしながら全国の仕事をしている方がいます。

そして、ここまでお話しした4つの自由があれば、最後の『選択の自由』が手に入ります。

何の選択なのかというと、『人生の選択』です。

というのも、もし手取り20万の正社員で、特にスキルがない場合、留学に行きたくても、『留学にいくには100万円必要で、そのためには一年間貯めて、でも帰ってきてしごとあるかな、、、』となるのですが、
フリーランスプログラマーであれば、『よし、在宅の案件にシフトして今すぐ留学に行こう。貯金も2ヶ月本気出せばたまるし、楽しければ、世界各地を回りながらグローバルなプログラマーになろう！』という選択が可能なのです。

もちろん、正社員のプログラマーでも、実力と多少のコミュニケーションスキルさえあれば、フリーになることは容易ですし、再就職先も多数あります。

このような人生選択の幅が、5年後10年後のnameさんの人生をより豊かにすることは間違いないでしょう。

一番恐ろしいのは、とくにスキルや経験が詰めない仕事につき、貯金も再就職もままならない状態です。
リストラや恐慌、ハイパーインフレなどの時に対応できず、その頃には社会保障でさえも怪しいでしょう。

そんな状況であれば、一日でも早くプログラミングという武器を身につけ、自分の人生をより自由に、安定的に、豊かにして行きましょう。

プログラミングによって得られる5つの自由は以上となります。
いかがでしたでしょうか？

何か疑問や、詳しく聞きたいことがありましたらこちらのページから無料体験レッスンを受講ください。
http://www.sejuku.net/pages/lesson

入塾しなくても、詳しい体験談や、学習方法、仕事獲得術など無料で教えさせていただきます。

次回はプログラミングが捗る必須ツールをご紹介いたします。

それでは、またお会いしましょう。"]
	}
  STEP_MAIL_SIGNATURE =
"侍エンジニア塾 代表
木内翔大

公式ホームページ
http://www.sejuku.net/

マンツーマンレッスン
http://www.sejuku.net/pages/lesson

メールマガジン配信停止
stop_mail
"
  # Include default devise modules. Others available are:
  # :token_authenticatable, :confirmable,
  # :lockable, :timeoutable and :omniauthable
  devise :database_authenticatable, :trackable, :omniauthable

  # Setup accessible (or protected) attributes for your model
  attr_accessible :first_name, :last_name, :email, :password, :name, :provider, :uid, :provider_image_url ,:nomail_token
  # attr_accessible :title, :body

  def self.find_for_facebook_oauth(auth, signed_in_resource=nil)
    user = User.where(:provider => auth.provider, :uid => auth.uid).first
    graph = Koala::Facebook::API.new(auth.credentials.token)
    profile = graph.get_object("me", {:locale => "ja"})
    unless user
      user = User.create(name:(profile["name"])? profile["name"] : auth.extra.raw_info.name,
                         first_name: profile["first_name"],
                         last_name: profile["last_name"],
                         provider:auth.provider,
                         uid:auth.uid,
                         email:auth.info.email,
                         nomail_token: SecureRandom.hex,
                         provider_image_url:auth.info.image,
                         password:Devise.friendly_token[0,20]
                        )
    end
    user
  end

  def self.new_with_session(params, session)
    super.tap do |user|
      if data = session["devise.facebook_data"] && session["devise.facebook_data"]["extra"]["raw_info"]
        user.email = data["email"] if user.email.blank?
      end
    end
  end

	def lapsed_days
    start_time = Time.mktime(2013, 10, 21, 20, 0, 0)
		(Time.now - self.created_at).divmod(24*60*60)[0]
    (start_time - self.created_at).divmod(24*60*60)[0] if self.created_at < start_time
	end

  def self.send_step_mails
    User.all.each do |user|
      StepMailer.send_step_mails(user).deliver
    end
  end
end

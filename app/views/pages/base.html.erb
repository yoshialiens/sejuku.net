<% #if user_signed_in? %>
　
<div class="section clearfix">
  <div class="contain-to-grid clearfix">
    <div class="twelve columns section-heading">
      <h1 class="twelve columns section-title">作りたいWebサービスが作れるようになるためには？</h1>
      <h3 class="twelve columns section-subtitle"></h3>
    </div>
  </div>
  <div class="row page-container">
    ・プログラミングとは【データ】を【操作】すること。<br>
    ・Webサービスがつくれるということは【データの操作】をおぼえること。<br>
    ・プログラムの処理はおおまかに下記4つの工程に分けることができる<br><br><br>

    　1.【 入力 】<br>
    　2.【 処理 】<br>
    　3.【 保存 】<br>
    　4.【 出力 】<br><br>

    この4つの方法を覚えることが、<br>
    「プログラミングができる」「Webサービスをつくれる」ことの第一歩になります。<br><br>

    Googleを例にすると<br>
    ++++++++++++++++++++++++++++++++++++++<br>
    1．【 入力 】<br>
    ユーザーが検索窓に<br>
    キーワードを入力して「検索」ボタンを押す<br><br>

    2．【 処理 】<br>
    入力された内容を<br>
    データ保存されているサイトの中から<br>
    検索条件にあったサイトを探し出す<br><br>

    3．【 保存 】<br>
    検索されたキーワード情報を保存する<br>
    （検索回数など順位付けなどに使うため）<br><br>

    4．【 出力 】<br>
    該当のキーワードにあったサイトを<br>
    データベースから取り出し、<br>
    検索結果画面に表示する<br>
    ++++++++++++++++++++++++++++++++++++++<br><br>

    この4つの方法を把握して<br>
    処理方法の「書き方」を必要なときに調べることができれば<br>
    プログラミングを書くことができるようになります。<br><br>

    プログラミング言語の違いは<br>
    書き方の違いなので、流れを理解できれば<br>
    どんな言語でも扱えるようになります。
  </div>
</div>

<div class="section clearfix">
  <div class="contain-to-grid clearfix">
    <div class="twelve columns section-heading">
      <h1 class="twelve columns section-title">データベース</h1>
      <h3 class="twelve columns section-subtitle"></h3>
    </div>
  </div>
  <div class="row page-container">
    データを保存しておく場所を【データベース】といいます。<br>
    Webサービスで利用するデータは全て<br>
    【データベース】に保存されています。<br>
    データベースは情報の格納に大きく4つの機能を備えています。<br><br>

    　1.CREATE【 追加する 】<br>
    　2.READ【 取得する 】<br>
    　3.UPDATE【 更新する 】<br>
    　4.DELETE【 削除する 】<br><br>

    この頭文字をあわせてCRUD（クラッド）と呼ばれる操作が<br>
    データベースの基本となります。<br><br>

    　1.データベースにデータを【 新規追加 】する、<br>
    　2.そのデータを【 取得 】（書き出す）する、<br>
    　3.そのデータを変更し【 更新 】（上書き登録）する、<br>
    　4.そのデータを【 削除 】する、<br><br>

    データベースへのアクセスについては<br>
    以下の3ステップで接続します。<br><br>

    　1.接続<br>
    　2.使用<br>
    　3.切断<br><br>

    データを操作するということが理解できれば<br>
    プログラミングへの理解が深まります。
  </div>
</div>

<div class="section clearfix">
  <div class="contain-to-grid clearfix">
    <div class="twelve columns section-heading">
      <h1 class="twelve columns section-title">Webサービスの全体構成</h1>
      <h3 class="twelve columns section-subtitle"></h3>
    </div>
  </div>
  <div class="row page-container">
    Webサービスを動かすためのコンピューターを「サーバー」といいます。<br><br>

    Webサービスを作って動かすためには<br>
    サーバーが必要でサーバーは下記の要素で構成されています。<br><br>

    +++++++++++++++++++++++++++++++++++<br>
      ・OS（オペレーティングシステム）<br>
      ・DB（データベース）<br>
      ・Webサーバー<br>
      ・フレームワーク<br>
      ・Webアプリケーション<br>
      ・UI（ユーザーインターフェース）<br>
    +++++++++++++++++++++++++++++++++++<br><br>

    ・OS（オペレーティングシステム）<br>
      サーバーの動きを管理する<br><br>

    ・DB（データベース）<br>
      データを保管、管理する<br><br>

    ・Webサーバー<br>
      Webサービスの動きを管理する<br><br>

    ・フレームワーク<br>
      Webサービスの動きをサポートする<br><br>

    ・Webアプリケーション<br>
      Webサービスの機能、本体<br><br>

    ・UI（ユーザーインターフェース）<br>
      表示される画面
  </div>
</div>

<div class="section clearfix">
  <div class="contain-to-grid clearfix">
    <div class="twelve columns section-heading">
      <h1 class="twelve columns section-title">変数と定数</h1>
      <h3 class="twelve columns section-subtitle"></h3>
    </div>
  </div>
  <div class="row page-container">
    ■変数<br>
    単一のデータを表す。一時的にデータを保管するために使う。<br><br>

    後で使うデータを、とっておくために使う。<br><br>

    ■定数<br>
    変わらないもの（変わってしまうと困るもの）<br>
    頭文字がアルファベットの大文字<br><br>

    ※一度代入した値は変更ができない。<br><br>

    ・使い方の例<br>
    ECサイトでたくさんの商品を販売している場合<br>
    消費税計算を行う際、直接計算式を記述していれば<br>
    膨大な箇所の変更を行わなければいけない。<br>
    【 a = b * 1.05】<br><br>

    1箇所でも見落としがあると不具合がでてしまうので<br>
    この場合定数を定義しておけば<br>
    書き換えは1箇所ですみます。<br><br>

    【 TAX = 1.05 】<br>
    【 a = b * TAX 】<br><br>

    ■覚えておく必要がある単語<br><br>

    ・関数<br>
    命令<br><br>

    ・引数<br>
    命令実行に必要な材料<br><br>

    ・戻り値<br>
    命令実行後の結果
  </div>
</div>

<div class="section clearfix">
  <div class="contain-to-grid clearfix">
    <div class="twelve columns section-heading">
      <h1 class="twelve columns section-title">配列とハッシュ</h1>
      <h3 class="twelve columns section-subtitle"></h3>
    </div>
  </div>
  <div class="row page-container">
    ■配列<br><br>

    文字列や数値など、さまざまなデータを並べて<br>
    ひとまとまりにしたもの<br><br>

    先頭から0から順に番号を振ったもの<br>
    同類のデータをひとまとめにして扱うときに使う<br><br>

    例　配列 score<br>
    ※テストの点数をデータとしてまとめる<br><br>

    score[0] = 96<br>
    score[1] = 89<br>
    score[2] = 92<br>
    score[3] = 75<br>
    score[4] = 81<br><br>

    ※インデックスが1番からではなく0番から始まることを覚えておきましょう。<br><br>

    ■ハッシュ<br><br>

    配列の値を取り出すキーに文字列を用いる配列<br>
    添字に憶えやすい【キーワード】を割り当てたもの<br><br>

    例　連想配列 cat<br>
    ※ねこの特徴をまとめる<br><br>

    cat[ookii] = おおきい<br>
    cat[chiisai] = ちいさい<br>
    cat[debu] = でぶ<br>
    cat[noppo] = のっぽ<br>
    cat[chibi] = ちび
  </div>
</div>

<div class="section clearfix">
  <div class="contain-to-grid clearfix">
    <div class="twelve columns section-heading">
      <h1 class="twelve columns section-title">メソッド、クラスとインスタンス</h1>
      <h3 class="twelve columns section-subtitle"></h3>
    </div>
  </div>
  <div class="row page-container">
    ■オブジェクト<br><br>

    オブジェクトとは【データ】と【処理】をまとめてオブジェクト（もの）として捉える<br>
    プログラミングの考え方、設計方法のことです。<br><br>

    ■メソッド<br><br>

    オブジェクトは【データ】と【処理】で、<br>
    メソッドはその【処理】のこと。<br><br>

    「テレビ」をオブジェクトとすれば、<br>
    「画面を映す」「チャンネルを変える」といった操作【処理】がメソッドになります。<br><br>

    ■クラスとインスタンス<br><br>

    クラスが【設計図】とすればインスタンスはその【設計図】を使って<br>
    【作られたもの】になります<br><br>

    設計図と製品という関係になります。<br><br>


    例　家を建てる場合<br><br>

    クラスが家の【設計図】<br><br>

    設計図を元に立てられた家がインスタンス【作られたもの】になります。
  </div>
</div>

<% #else %>

<div class="modal-backdrop fade in" style="z-index: 1050;"></div>
<% #end %>


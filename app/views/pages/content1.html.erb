<!--% if user_signed_in? %-->
　
<div class="section clearfix">
  <div class="contain-to-grid clearfix">
    <div class="twelve columns section-heading">
      <h1 class="twelve columns section-title">二週間でプログラミング基礎をマスターする方法</h1>
      <h3 class="twelve columns section-subtitle"></h3>
    </div>
  </div>
  <div class="row page-container">
    このページでは『2週間でプログラミング基礎をマスターする方法』について触れていきます。<br/>
    文章量はあまり多くないので、サクッと読めますが、実践して実力をつけるには、この内容に沿ってそれなりの時間が必要です。<br/>
    私はプログラミングをマンツーマンで教える塾を経営しているのですが、だいたいWebサービスを自力で作れるようになるまでに、200-300時間はかかると思います。独学だと、その倍位は最低でもかかるでしょう。<br/>
    月100時間の学習時間でしたら3ヶ月目でようやくつかめてくる。という感じでしょうか。<br/>
    このレポートではそんな限られた時間を有効方用して頂き、『無駄のない学習』をして頂きたくて書きました。<br/>
  </div>
</div>

<div class="section clearfix">
  <div class="contain-to-grid clearfix">
    <div class="twelve columns section-heading">
      <h1 class="twelve columns section-title">Webサービスが作れるということ</h1>
      <h3 class="twelve columns section-subtitle"></h3>
    </div>
  </div>
  <div class="row page-container">
    この章では私が実際に体験した『プログラミングができて、Webサービスが作れたことによる自由』について書いて行きます。<br/>
    <br/>
    ①表現の自由<br/>
    　自分が思いついたアイデアを、自分ひとりで形にすることが出来ます。<br/>
    　するとその形をもとに他の人にもうまく伝えられるので、協力を得やすいです。<br/>
    　何よりも、自分のアイデアを形にしていくプロセス自体が楽しいです。<br/>
    ②お金の自由<br/>
    　Webサービスが作れると沢山の仕事があります。<br/>
    　エンジニアの仕事を時給換算すると2000~5000円はもらえることが普通です。<br/>
    　また、『手に職』がある状態なので、フリーランスとして独立することも容易で、<br/>
    　複数の仕事を掛け持ちすることで収入も安定します。<br/>
    ③時間の自由<br/>
    　お金の自由があり、フリーランス状態だと、時間の制約がなくなります。<br/>
    　『月50~100時間働いて、空いた時間で好きなことをする。』<br/>
    　ということが出来ます。<br/>
    ④地理の自由<br/>
    　在宅の仕事であれば、基本場所は選ばないので、地方に住むことも出来ますし、<br/>
    　旅行しながら旅先で仕事することも容易です。<br/>
    ⑤選択の自由<br/>
    　ここまで4つの自由が、人生を選ぶ範囲が広くなります。<br/>
    　『スキなときに、スキなところで、スキな人と』を実現できます。<br/>
    　思わぬチャンスがあったときに、すぐに飛びつけるのがいいところです。<br/>
    <br/>
    Webサービスを作ることができて、フリーランスエンジニアとして働いていると、ご覧のような自由が望めます。<br/>
    仮に①だけでも、自分の趣味になりますし、誰かと一緒にモノづくりができる楽しさがあります。<br/>
    また、アプリやサービスを作って起業も夢ではありません。<br/>
  </div>
</div>

<div class="section clearfix">
  <div class="contain-to-grid clearfix">
    <div class="twelve columns section-heading">
      <h1 class="twelve columns section-title">Webサービスを作る上で必要な技術</h1>
      <h3 class="twelve columns section-subtitle"></h3>
    </div>
  </div>
  <div class="row page-container">
    プログラミングの基礎に入る前に、簡単に『Webサービスを作る上で必要な技術』を整理します。<br/>
<br/>
    ■Webサービス開発に使われている技術<br/>
    Webサービス開発で使われる技術は大きく2つに分けられます。<br/>
<br/>
    ●クライアントサイド<br/>
    Webブラウザ、やスマホアプリケーション上で動き、表示や、入力などを受け付けるインターフェイスの部分です。<br/>
    ブラウザの場合 HTML + CSS + JavaScript<br/>
    アプリの場合 Objective C / JAVA<br/>
<br/>
    ●サーバーサイド<br/>
    サービスのデータを管理する部分です。<br/>
    言語 Ruby / PHP<br/>
    フレームワーク Ruby on Rails / CakePHP<br/>
    データベース MySQL / MongoDB<br/>
    料理店の口コミサイト、食べログを例にすると、ユーザーが触る画面はクライアントサイド、表示される店舗データを管理するのがサーバーサイドとなります。<br/>
<br/>
    ■このレポートでは以下の構成で学習を進めて行きます。<br/>
    ●クライアントサイド<br/>
    HTML, CSS, JavaScript<br/>
    ●サーバーサイド<br/>
    言語 Ruby<br/>
    フレームワーク Ruby on Rails<br/>
    データベース MySQL<br/>
    以上の技術を基礎レベルだけ使えるようになると、Webサービスは開発できます。<br/>
  </div>
</div>

<div class="section clearfix">
  <div class="contain-to-grid clearfix">
    <div class="twelve columns section-heading">
      <h1 class="twelve columns section-title">Rubyのインストール</h1>
      <h3 class="twelve columns section-subtitle"></h3>
    </div>
  </div>
  <div class="row page-container">
    プログラミング基礎の学習方法に入る前に、そのために必要なrubyのインストールが必要です。<br/>
    お使いのPCによって方法が異なりますので、以下を参考にグーグルなどで調べながらやってみて下さい。<br/>
<br/>
    Max OS Xの場合<br/>
    実はMac OS Xにはもともとruby1.8.7が入っています。<br/>
    ですが、このバージョンだと少し古くて、のちのち不都合が出てくるので、ruby1.9.3をインストールします。<br/>
    インストール方法は様々なので、いくつか記事を紹介しておきます。<br/>
    <a href="/pages/ruby_install_mac" target="_blank">http://www.sejuku.net/pages/ruby_install_mac</a><br/>
    <a href="http://www.shck3.com/?p=409" target="_blank">http://www.shck3.com/?p=409</a><br/>
<br/>
    Windowsの場合<br/>
    <a href="http://www.rubylife.jp/install/" target="_blank">http://www.rubylife.jp/install/</a><br/>
    こちらのホームページのインストール手順に沿って進めて下さい。<br/>
    今回インストールしていただきたいのはruby1.9.3です。<br/>
<br/>
    実は環境構築は、お使いのPCによって環境が違いますので、躓くポイントが人それぞれです。<br/>
    何かわからないこと、躓いた事があれば、<a href="/questions" target="_blank">こちらのQ&Aフォームをお使い下さい。</a><br/>
  </div>
</div>

<div class="section clearfix">
  <div class="contain-to-grid clearfix">
    <div class="twelve columns section-heading">
      <h1 class="twelve columns section-title">プログラミング基礎の習得方法</h1>
      <h3 class="twelve columns section-subtitle"></h3>
    </div>
  </div>
  <div class="row page-container">
    さぁいよいよ、プログラミング基礎の習得です。<br/>
<br/>
    昔はプログラミングを学習するといったら、書籍が中心でした。<br/>
    しかし、近頃はわかりやすいWEBサイトや、プログラミング学習に特化したWEBサービスがいくつもあります。<br/>
    今回はそのなかでも、特に効率的に学習できるプログラミング動画サービスをご紹介いたします。<br/>
<br/>
    ■ドットインストール<br/>
    <a href="http://dotinstall.com/" target="_blank">http://dotinstall.com/</a><br/>
    このサービスは「3分動画でマスターするプログラミング学習サイト」というキャッチコピー通り、プログラミングを動画で学習できます。<br/>
    ドットインストールのいいところは、書籍と違って、手順が動画で見れるので、誰でも学習することができます。<br/>
    しかも、すべてのメジャーな言語に対応していて、すべて無料です。<br/>
    これをやれば、その言語の基礎がなんとなくわかるようになります。<br/>
    もちろん3分動画なので、解説は必要最低限しかありません。<br/>
    あわせて参考書なども買うと効率的に学習できるでしょう。<br/>
<br/>
    ■WEBサービス開発に必要なプログラミング基礎と教材<br/>
    ●HTML/CSS<br/>
    ドットインストール<br/>
    <a href="http://dotinstall.com/lessons/basic_html" target="_blank">http://dotinstall.com/lessons/basic_html</a><br/>
    <a href="http://dotinstall.com/lessons/basic_css" target="_blank">http://dotinstall.com/lessons/basic_css</a><br/>
    お勧め書籍<br/>
    <a href="http://www.amazon.co.jp/dp/4844329669/" target="_blank">http://www.amazon.co.jp/dp/4844329669/</a><br/>
    習得時間目安<br/>
    20時間<br/>
<br/>
    ●JavaScript<br/>
    ドットインストール<br/>
    <a href="http://dotinstall.com/lessons/basic_javascript" target="_blank">http://dotinstall.com/lessons/basic_javascript</a><br/>
    お勧め書籍<br/>
    <a href="http://www.amazon.co.jp/exec/obidos/ASIN/4839941874" target="_blank">http://www.amazon.co.jp/exec/obidos/ASIN/4839941874</a><br/>
    習得時間目安<br/>
    15時間<br/>
<br/>
    ●Ruby<br/>
    ドットインストール<br/>
    <a href="http://dotinstall.com/lessons/basic_ruby" target="_blank">http://dotinstall.com/lessons/basic_ruby</a><br/>
    お勧めサイト<br/>
    <a href="http://www.rubylife.jp/" target="_blank">http://www.rubylife.jp/</a><br/>
    お勧め書籍<br/>
    <a href="http://www.amazon.co.jp/dp/4797372273" target="_blank">http://www.amazon.co.jp/dp/4797372273</a><br/>
    習得時間目安<br/>
    15時間<br/>
<br/>
    ドットインストールを進めながら、詳しく知りたいところを書籍やWEBサイトで調べて進めていけば、<br/>
    およそ50時間ほどでWEBサービスを作るのに必要なプログラミング基礎は身につきます。<br/>
    この基礎を身につけた上にWEBフレームワークの基礎を積めばWEBサービスは作れます。<br/>
<br/>
    ※WEBフレームワークとは<br/>
    WEBフレームワークとは「WEBサービスのフレームワーク（骨組み、枠組み、足場)」を提供するものです。<br/>
    ようは、WEBサービスを作るうえでの「土台」となる部分です。<br/>
    わかりやすくいうと、WEBサービスを作るには何万何十万行のコードを書かなくてはなりません。<br/>
    すると、プログラマーはそんなに大変なことをしているのかというと、そうではありません。<br/>
    WEBフレームワークを導入することにより、あらかじめ何万何十万行のコードが書かれているので、それを数行で活用するだけですみます。<br/>
    おかげで数千行～数万行書くだけでWEBサービスが作れます。<br/>
    このWEBフレームワークには沢山の種類があります。<br/>
    このレポートでは現在最も人気があり、もっともアップデートが盛んな「Ruby On Rails」というフレームワークを紹介いたします。<br/>
  </div>
</div>

<div class="section clearfix">
  <div class="contain-to-grid clearfix">
    <div class="twelve columns section-heading">
      <h1 class="twelve columns section-title">何かわからないことがあったら</h1>
      <h3 class="twelve columns section-subtitle"></h3>
    </div>
  </div>
  <div class="row page-container">
    ここまで駆け足でプログラミング基礎をお教えしてきました。<br/>
    言葉足らずでわから無いところも多いでしょう。<br/>
    ということで、聞きたいことがある方は専用の<a href="/questions" target="_blank">Q&Aフォーム</a>にメッセージを下さい。<br/>
    このレポートに関することやプログラミングに関することで聞きたいことがあれば『何でも』答えさせていただきます。<br/>
    また、セミナーや無料相談なんかもやっているのでぜひご利用ください。<br/>
    『とにかく早くマスターしたい』『一人で学ぶ自信がない』という方は、マンツーマンレッスンがお勧めです。<br/>
    <a href="/pages/lesson" target="_blank">こちらから</a>受講無料相談を受け付けております。</br>
    <br/>
    少しでも早く、貴方にプログラミングを習得していただいて、Webサービスを作る楽しさを感じて欲しいと願っております。<br/>
    最後までお読み頂いてありがとうございます。<br/>
    またQ&Aやセミナー、無料相談などでお会いできることを楽しみにしております^^<br/>
  </div>
</div>

<!--% #else %>
<div class="section clearfix">
  <div class="contain-to-grid clearfix">
    <div class="twelve columns section-heading">
      <h1 class="twelve columns section-title">二週間でプログラミング基礎をマスターする方法</h1>
      <h3 class="twelve columns section-subtitle"></h3>
    </div>
  </div>
  <div class="row page-container">
    このページでは『2週間でプログラミング基礎をマスターする方法』について触れていきます。<br/>
    文章量はあまり多くないので、サクッと読めますが、実践して実力をつけるには、この内容に沿ってそれなりの時間が必要です。<br/>
    私はプログラミングをマンツーマンで教える塾を経営しているのですが、だいたいWebサービスを自力で作れるようになるまでに、200-300時間はかかると思います。独学だと、その倍位は最低でもかかるでしょう。<br/>
    月100時間の学習時間でしたら3ヶ月目でようやくつかめてくる。という感じでしょうか。<br/>
    このレポートではそんな限られた時間を有効方用して頂き、『無駄のない学習』をして頂きたくて書きました。<br/>
  </div>
</div>

<div class="section clearfix">
  <div class="contain-to-grid clearfix">
    <div class="twelve columns section-heading">
      <h1 class="twelve columns section-title">Webサービスが作れるということ</h1>
      <h3 class="twelve columns section-subtitle"></h3>
        <div class="row page-container">
        <br/><br/><br/><br/> 
        </div>
    </div>
  </div>
</div>

<div class="modal-scrollable" style="z-index: 1060;">
  <div id="modal-login" class="modal fade in modal-backdrop content" tabindex="1" data-width="760">
    <div class="modal-header">
     <h3>ここから先はログインしてご覧ください。</h3>
    </div>
    <div class="modal-body center">
      <%= #link_to (image_tag "/assets/fb_login.gif"), user_omniauth_authorize_path(:facebook) %>
    </div>
  </div>
</div>
<div class="modal-backdrop fade in" style="z-index: 1050;"></div>
<% #end %-->

